<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">u/WhiningCoil - r/TheMotte</title><id>https://themotte.srid.ca/</id><updated>2022-09-03T00:33:43Z</updated><link href="https://themotte.srid.ca/u/WhiningCoil" rel="self"/><entry><id>http://old.reddit.com/r/TheMotte/comments/x3t1mp/friday_fun_thread_for_september_02_2022/imv9rg4/?sort=confidence</id><title type="text">[FF] So I ordered a [NuXT](https://monotech.fwscart.com/NuXT_v20_MicroATX_Turbo_XT_10</title><updated>2022-09-03T00:33:43Z</updated><author><name>WhiningCoil</name></author><category label="FF" scheme="https://themotte.srid.ca/ff" term="Friday Fun"/><content type="text">So I ordered a [NuXT](https://monotech.fwscart.com/NuXT_v20_MicroATX_Turbo_XT_10MHz_832K_XTIDE_MultiIO_SVGA/p6083514_19777986.aspx).  It hasn&#39;t shipped yet.  But I like to be able to code on every piece of hardware I own.  So I began noodling around, trying to set up a cross coding environment today.

I started with Visual Studio Code since it&#39;s crazy flexible.  Then I set up a bunch of task to compile my ASM files using NASM, using the CPU 8086 directive and outputting as OBJ files which need to be linked.  I&#39;m under the impression 16-bit code is the default with this arrangement.  I found a free linker called ALINK which then links the OBJ files into an EXE.  Then I set up, in kind of a janky way, for the Run command to launch DOSBOX and execute it&#39;s debug command on my exe.

I still want to find a way to export my breakpoints from Visual Studio Code and import them into DOSBOX.  I see that this debug version of DOSBOX I have can import breakpoints, and NASM spits out dbg files which I **think** I can parse for the segment:offset&#39;s I&#39;ll need to breakpoint at labels in DOSBOX.  I just am not sure off the top of my head how to export the breakpoint lines from Visual Studio Code.  Oh well, some day.

Anyways, it was a fun day.  Threw together a pretty simple number guessing game program.  It&#39;s a good way to get a grip on the basics.  Reading the keyboard, processing input, converting an ascii number to binary, generating a random number, some basic math, printing to the screen.  Then cause why not, I started fucking around with linking multiple ASM files, with GLOBAL and EXTERN&#39;d functions.  Did some far calls across memory segments.  Wasn&#39;t as bad as I thought it would be.

Probably start fucking around with EGA graphics and ADLIB sound next.</content><link href="http://old.reddit.com/r/TheMotte/comments/x3t1mp/friday_fun_thread_for_september_02_2022/imv9rg4/?sort=confidence"/></entry></feed>